{"version":3,"sources":["components/NavMessage/index.js","components/Nav/index.js","components/Header/index.js","components/Container/index.js","components/ClickItem/index.js","components/Footer/index.js","components/Game/index.js","App.js","registerServiceWorker.js","index.js"],"names":["NavMessage","state","message","animating","renderMessage","_this","prevState","score","_ref","topScore","newState","this","props","setState","_this2","react_default","a","createElement","className","onAnimationEnd","Component","Nav","href","components_NavMessage","Header","Container","children","ClickItem","role","aria-label","onClick","handleClick","id","style","backgroundImage","concat","image","shake","Footer","alt","src","Game","data","handleCorrectGuess","newData","newScore","shuffleData","handleIncorrectGuess","resetData","map","item","Object","objectSpread","clicked","i","length","j","Math","floor","random","temp","handleItemClick","guessedCorrectly","newItem","components_Nav","components_Header","components_Container","dataItem","components_ClickItem","key","components_Footer","App","components_Game","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4a671a84.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\n\r\n// NavMessage renders an li tag containing an message for the user\r\n\r\nclass NavMessage extends Component {\r\n  state = {\r\n    message: \"\",\r\n    animating: false\r\n  };\r\n\r\n  componentDidUpdate({ score, topScore }, prevState) {\r\n    const newState = { animating: true };\r\n\r\n    if (score === 0 && topScore === 0) {\r\n      newState.message = \"\";\r\n    } else if (score === 0 && topScore > 0) {\r\n      newState.message = \"incorrect\";\r\n    } else {\r\n      newState.message = \"correct\";\r\n    }\r\n\r\n    if (score !== this.props.score || this.state.message !== newState.message) {\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  renderMessage = () => {\r\n    switch (this.state.message) {\r\n    case \"correct\":\r\n      return \"You guessed correctly!\";\r\n    case \"incorrect\":\r\n      return \"You guessed incorrectly!\";\r\n    default:\r\n      return \"Click an image to begin!\";\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <li\r\n        className={this.state.animating ? this.state.message : \"\"}\r\n        onAnimationEnd={() => this.setState({ animating: false })}\r\n      >\r\n        {this.renderMessage()}\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavMessage;\r\n","import React from \"react\";\r\nimport NavMessage from \"../NavMessage\";\r\nimport \"./style.css\";\r\n\r\n// Component for the Navbar\r\n\r\nfunction Nav(props) {\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <ul>\r\n        <li className=\"brand\">\r\n          <a href=\"/\">Clicky Game</a>\r\n        </li>\r\n        <NavMessage score={props.score} topScore={props.topScore} />\r\n        <li>\r\n          Score: {props.score} | Top Score: {props.topScore}\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>Clicky Game!</h1>\r\n      <h2>Click on an image to earn points, but don't click on any more than once!</h2>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Container(props) {\r\n  return <main className=\"container\">{props.children}</main>;\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction ClickItem(props) {\r\n  return (\r\n    <div\r\n      role=\"img\"\r\n      aria-label=\"click item\"\r\n      onClick={() => props.handleClick(props.id)}\r\n      style={{ backgroundImage: `url(\"${props.image}\")` }}\r\n      className={`click-item${props.shake ? \" shake\" : \"\"}`}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ClickItem;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"bottom\">\r\n        Clicky Game! <img alt=\"react\" src=\"assets/images/react.svg\" />\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Nav from \"../Nav\";\r\nimport Header from \"../Header\";\r\nimport Container from \"../Container\";\r\nimport ClickItem from \"../ClickItem\";\r\nimport Footer from \"../Footer\";\r\nimport data from \"../../data.json\";\r\n\r\nlet topScore = 0;\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    data: data,\r\n    score: 0,\r\n    shake: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: this.shuffleData(this.state.data) });\r\n  }\r\n\r\n  handleCorrectGuess = newData => {\r\n    let newScore = this.state.score + 1;\r\n\r\n    if (newScore > topScore) {\r\n      topScore++;\r\n    }\r\n\r\n    newData = this.shuffleData(newData);\r\n    this.setState({\r\n      data: newData,\r\n      score: newScore,\r\n      shake: false\r\n    });\r\n  };\r\n\r\n  handleIncorrectGuess = data => {\r\n\r\n    this.setState({\r\n      data: this.resetData(data),\r\n      score: 0,\r\n      shake: true\r\n    });\r\n  };\r\n\r\n  resetData = data => {\r\n    const resetData = data.map(item => ({ ...item, clicked: false }));\r\n    return this.shuffleData(resetData);\r\n  };\r\n\r\n  shuffleData = data => {\r\n    let i = data.length - 1;\r\n    while (i > 0) {\r\n      const j = Math.floor(Math.random() * (i + 1));\r\n      const temp = data[i];\r\n      data[i] = data[j];\r\n      data[j] = temp;\r\n      i--;\r\n    }\r\n    return data;\r\n  };\r\n\r\n  handleItemClick = id => {\r\n    let guessedCorrectly = false;\r\n    const newData = this.state.data.map(item => {\r\n      const newItem = { ...item };\r\n      if (newItem.id === id) {\r\n        if (!newItem.clicked) {\r\n          newItem.clicked = true;\r\n          guessedCorrectly = true;\r\n        }\r\n      }\r\n      return newItem;\r\n    });\r\n    guessedCorrectly\r\n      ? this.handleCorrectGuess(newData)\r\n      : this.handleIncorrectGuess(newData);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Nav score={this.state.score} topScore={topScore} />\r\n        <Header />\r\n        <Container>\r\n          {this.state.data.map(dataItem => (\r\n            <ClickItem\r\n              handleClick={this.handleItemClick}\r\n              id={dataItem.id}\r\n              key={dataItem.id}\r\n              image={dataItem.image}\r\n              shake={this.state.shake}\r\n            />\r\n          ))}\r\n        </Container>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;","import React from \"react\";\r\nimport Game from \"./components/Game\";\r\n\r\nfunction App() {\r\n  return <Game />;\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport registerServiceWorker from \"./registerServiceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}